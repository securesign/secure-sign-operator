apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Adds namespace to all resources.
namespace: openshift-rhtas-operator

# Value of this field is prepended to the
# names of all resources, e.g. a deployment named
# "wordpress" becomes "alices-wordpress".
# Note that it should also match with the prefix (text before '-') of the namespace
# field above.
namePrefix: rhtas-

# Labels to add to all resources and selectors.
#commonLabels:
#  someName: someValue

# [WEBHOOK] To enable webhook, uncomment all the sections with [WEBHOOK] prefix including the one in
# crd/kustomization.yaml
#- ../webhook
# [CERTMANAGER] To enable cert-manager, uncomment all sections with 'CERTMANAGER'. 'WEBHOOK' components are required.
#- ../certmanager
# [PROMETHEUS] To enable prometheus monitor, uncomment all sections with 'PROMETHEUS'.
resources:
- ../crd
- ../rbac
- ../manager
- ../prometheus

patches:
- path: manager_metrics_patch.yaml
  target:
    kind: Deployment
    name: operator-controller-manager
- path: manager_images_patch.yaml
  target:
    kind: Deployment
    name: operator-controller-manager

configMapGenerator:
- behavior: create
  envs:
  - images.env
  name: related-images

replacements:
- source:
    fieldPath: data.RELATED_IMAGE_TRILLIAN_LOG_SIGNER
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_TRILLIAN_LOG_SIGNER$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_TRILLIAN_LOG_SERVER
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_TRILLIAN_LOG_SERVER$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_TRILLIAN_DB
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_TRILLIAN_DB$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_TRILLIAN_NETCAT
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_TRILLIAN_NETCAT$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_FULCIO_SERVER
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_FULCIO_SERVER$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_REKOR_REDIS
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_REKOR_REDIS$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_REKOR_SERVER
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_REKOR_SERVER$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_REKOR_SEARCH_UI
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_REKOR_SEARCH_UI$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_BACKFILL_REDIS
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_BACKFILL_REDIS$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_TUF
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_TUF$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_CTLOG
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_CTLOG$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_HTTP_SERVER
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_HTTP_SERVER$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_SEGMENT_REPORTING
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_SEGMENT_REPORTING$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_TIMESTAMP_AUTHORITY
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_TIMESTAMP_AUTHORITY$].value
    select:
      kind: Deployment
      name: operator-controller-manager
- source:
    fieldPath: data.RELATED_IMAGE_CLIENT_SERVER
    kind: ConfigMap
    name: related-images
    version: v1
  targets:
  - fieldPaths:
    - spec.template.spec.containers.[name=^manager$].env.[name=^RELATED_IMAGE_CLIENT_SERVER$].value
    select:
      kind: Deployment
      name: operator-controller-manager

# Protect the /metrics endpoint by putting it behind auth.
# If you want your controller-manager to expose the /metrics
# endpoint w/o any authn/z, please comment the following line.
#- path: manager_auth_proxy_patch.yaml

# [WEBHOOK] To enable webhook, uncomment all the sections with [WEBHOOK] prefix including the one in
# crd/kustomization.yaml
#- path: manager_webhook_patch.yaml

# [CERTMANAGER] To enable cert-manager, uncomment all sections with 'CERTMANAGER'.
# Uncomment 'CERTMANAGER' sections in crd/kustomization.yaml to enable the CA injection in the admission webhooks.
# 'CERTMANAGER' needs to be enabled to use ca injection
#- path: webhookcainjection_patch.yaml

# [CERTMANAGER] To enable cert-manager, uncomment all sections with 'CERTMANAGER' prefix.
# Uncomment the following replacements to add the cert-manager CA injection annotations
#replacements:
#  - source: # Add cert-manager annotation to ValidatingWebhookConfiguration, MutatingWebhookConfiguration and CRDs
#      kind: Certificate
#      group: cert-manager.io
#      version: v1
#      name: serving-cert # this name should match the one in certificate.yaml
#      fieldPath: .metadata.namespace # namespace of the certificate CR
#    targets:
#      - select:
#          kind: ValidatingWebhookConfiguration
#        fieldPaths:
#          - .metadata.annotations.[cert-manager.io/inject-ca-from]
#        options:
#          delimiter: '/'
#          index: 0
#          create: true
#      - select:
#          kind: MutatingWebhookConfiguration
#        fieldPaths:
#          - .metadata.annotations.[cert-manager.io/inject-ca-from]
#        options:
#          delimiter: '/'
#          index: 0
#          create: true
#      - select:
#          kind: CustomResourceDefinition
#        fieldPaths:
#          - .metadata.annotations.[cert-manager.io/inject-ca-from]
#        options:
#          delimiter: '/'
#          index: 0
#          create: true
#  - source:
#      kind: Certificate
#      group: cert-manager.io
#      version: v1
#      name: serving-cert # this name should match the one in certificate.yaml
#      fieldPath: .metadata.name
#    targets:
#      - select:
#          kind: ValidatingWebhookConfiguration
#        fieldPaths:
#          - .metadata.annotations.[cert-manager.io/inject-ca-from]
#        options:
#          delimiter: '/'
#          index: 1
#          create: true
#      - select:
#          kind: MutatingWebhookConfiguration
#        fieldPaths:
#          - .metadata.annotations.[cert-manager.io/inject-ca-from]
#        options:
#          delimiter: '/'
#          index: 1
#          create: true
#      - select:
#          kind: CustomResourceDefinition
#        fieldPaths:
#          - .metadata.annotations.[cert-manager.io/inject-ca-from]
#        options:
#          delimiter: '/'
#          index: 1
#          create: true
#  - source: # Add cert-manager annotation to the webhook Service
#      kind: Service
#      version: v1
#      name: webhook-service
#      fieldPath: .metadata.name # namespace of the service
#    targets:
#      - select:
#          kind: Certificate
#          group: cert-manager.io
#          version: v1
#        fieldPaths:
#          - .spec.dnsNames.0
#          - .spec.dnsNames.1
#        options:
#          delimiter: '.'
#          index: 0
#          create: true
#  - source:
#      kind: Service
#      version: v1
#      name: webhook-service
#      fieldPath: .metadata.namespace # namespace of the service
#    targets:
#      - select:
#          kind: Certificate
#          group: cert-manager.io
#          version: v1
#        fieldPaths:
#          - .spec.dnsNames.0
#          - .spec.dnsNames.1
#        options:
#          delimiter: '.'
#          index: 1
#          create: true

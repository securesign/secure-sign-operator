name: Validate SecureSign
on:
  workflow_dispatch:
  push:
    branches: [ "main", "release*" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "main", "release*" ]

env:
  GO_VERSION: 1.24
  IMG: ghcr.io/securesign/secure-sign-operator:${{ github.sha }}
  BUNDLE_IMG: ghcr.io/securesign/secure-sign-operator-bundle:${{ github.sha }}
  CATALOG_IMG: ghcr.io/securesign/secure-sign-operator-fbc:${{ github.sha }}
  CONTAINER_TOOL: podman

jobs:
  build-operator:
    name: Build-operator
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Replace images
        run: make dev-images && cat config/default/images.env

      - name: Build operator container
        run: make docker-build

      - name: Save container image
        run: podman save -o /tmp/operator-oci.tar --format oci-archive $IMG

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: operator-image
          path: /tmp/operator-oci.tar
          retention-days: 1

  build-bundle:
    name: Build-bundle-image
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Log in to registry.redhat.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: registry.redhat.io
          auth_file_path: /tmp/config.json

      - name: Replace images
        run: make dev-images && cat config/default/images.env

      - name: Build operator bundle
        run: make bundle bundle-build

      - name: Save container image
        run: podman save -o /tmp/bundle-oci.tar --format oci-archive $BUNDLE_IMG

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bundle-image
          path: /tmp/bundle-oci.tar
          retention-days: 1

  build-fbc:
    name: Build-fbc
    runs-on: ubuntu-24.04
    needs: build-bundle
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Log in to registry.redhat.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: registry.redhat.io
          auth_file_path: /tmp/config.json

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: "*-image"
          merge-multiple: true
          path: /tmp

      - name: Load images
        run: podman load -i /tmp/bundle-oci.tar

      - name: Install OPM
        run: |
          make opm
          echo "OPM=${{ github.workspace }}/bin/opm" >> $GITHUB_ENV

      - name: Checkout FBC source
        uses: actions/checkout@v4
        with:
          repository: "securesign/fbc"
          path: fbc

      - name: Build catalog
        run: |
          cd fbc
          cp v4.14/rhtas-operator/catalog.Dockerfile v4.14
          chmod +x ./generate-fbc.sh && OPM_CMD=${{ env.OPM }} ./generate-fbc.sh --init-basic v4.14 jq
          cat << EOF >> v4.14/graph.json
          {
             "schema": "olm.bundle",
             "image": "$BUNDLE_IMG"
          }
          EOF
          #TODO: versions needs to be maintained - try to eliminate
          cat <<< $(jq  'select(.schema == "olm.channel" and .name == "stable").entries += [{"name":"rhtas-operator.v1.3.0", "replaces": "${{ vars.LATEST_OLM_CHANNEL }}"}]' v4.14/graph.json) > v4.14/graph.json
          cat v4.14/graph.json
          ${{ env.OPM }} alpha render-template basic v4.14/graph.json > v4.14/rhtas-operator/catalog/rhtas-operator/catalog.json
          ${{ env.OPM }} validate v4.14/rhtas-operator/catalog/rhtas-operator
          podman build v4.14/rhtas-operator -f v4.14/rhtas-operator/catalog.Dockerfile -t $CATALOG_IMG

      - name: Save container image
        run: podman save -o /tmp/catalog-oci.tar --format oci-archive $CATALOG_IMG

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: catalog-image
          path: /tmp/catalog-oci.tar
          retention-days: 1

  build-tuftool:
    name: Build-tuftool
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout tough source
        uses: actions/checkout@v4
        with:
          repository: "securesign/tough"
          path: tough

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            /tmp/tuftool
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cd tough && cargo build --release --target-dir /tmp/tuftool

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tuftool
          path: /tmp/tuftool/release/tuftool
          retention-days: 1
          if-no-files-found: error


  test-kind:
    name: Test kind deployment
    runs-on: ubuntu-24.04
    needs:
    - build-operator
    - build-tuftool
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download tuftool
        uses: actions/download-artifact@v4
        with:
          name: tuftool
          path: /tmp/tuftool
      - run: echo "/tmp/tuftool" >> $GITHUB_PATH

      - name: Log in to registry.redhat.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: registry.redhat.io
          auth_file_path: /tmp/config.json

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: "*-image"
          merge-multiple: true
          path: /tmp

      - name: Install Cluster
        uses: ./.github/actions/kind-cluster
        with:
          config: ./ci/config.yaml
          prometheus: 'true'
          keycloak: 'true'
          olm: 'true'

      - name: Load images
        run: |
          podman load -i /tmp/operator-oci.tar
          kind load image-archive /tmp/operator-oci.tar

      - name: Replace images
        run: make dev-images && cat config/default/images.env

      - name: Deploy operator container
        env:
          OPENSHIFT: false
        run: make deploy

      - name: Wait for operator to be ready
        run: |
          kubectl wait --for=condition=available deployment/rhtas-operator-controller-manager --timeout=120s -n openshift-rhtas-operator

      - name: Add service hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 fulcio-server.local tuf.local rekor-server.local keycloak-internal.keycloak-system.svc rekor-search-ui.local cli-server.local tsa-server.local" | sudo tee -a /etc/hosts
      - name: Install cosign
        run: go install github.com/sigstore/cosign/v2/cmd/cosign@v2.4.0

      - name: Run tests
        run: make test-e2e

      - name: Archive test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-kind
          path: test/**/k8s-dump-*.tar.gz
          if-no-files-found: ignore

      - name: dump the logs of the operator
        run: kubectl logs -n openshift-rhtas-operator deployment/rhtas-operator-controller-manager
        if: always()

  test-upgrade:
    name: Test upgrade operator
    runs-on: ubuntu-24.04
    needs:
      - build-operator
      - build-bundle
      - build-fbc
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Log in to registry.redhat.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: registry.redhat.io
          auth_file_path: /tmp/config.json

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: "*-image"
          merge-multiple: true
          path: /tmp

      - name: Install Cluster
        uses: ./.github/actions/kind-cluster
        with:
          config: ./ci/config.yaml
          prometheus: 'true'
          keycloak: 'true'
          olm: 'true'

      - name: Load images
        run: |
          podman load -i /tmp/operator-oci.tar
          podman load -i /tmp/bundle-oci.tar
          podman load -i /tmp/catalog-oci.tar
          kind load image-archive /tmp/operator-oci.tar
          kind load image-archive /tmp/bundle-oci.tar
          kind load image-archive /tmp/catalog-oci.tar

      - name: Add service hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 fulcio-server.local tuf.local rekor-server.local keycloak-internal.keycloak-system.svc rekor-search-ui.local cli-server.local tsa-server.local" | sudo tee -a /etc/hosts
      - name: Install cosign
        run: go install github.com/sigstore/cosign/v2/cmd/cosign@v2.4.0

      - name: Replace images
        run: make dev-images generate && cat config/default/images.env

      - name: Run tests
        env:
          TEST_BASE_CATALOG: registry.redhat.io/redhat/redhat-operator-index:v4.14
          TEST_TARGET_CATALOG: ${{ env.CATALOG_IMG }}
          OPENSHIFT: false
        run: go test -p 1 ./test/e2e/... -tags=upgrade -timeout 20m

      - name: Archive test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-upgrade
          path: test/**/k8s-dump-*.tar.gz
          if-no-files-found: ignore

  test-custom-install:
    name: Test with custom operator installation
    runs-on: ubuntu-24.04
    needs:
      - build-operator
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Log in to registry.redhat.io
        uses: redhat-actions/podman-login@9184318aae1ee5034fbfbacc0388acf12669171f # v1
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: registry.redhat.io
          auth_file_path: /tmp/config.json

      - name: Image prune
        run: podman image prune -af

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: "*-image"
          merge-multiple: true
          path: /tmp

      - name: Install Cluster
        uses: ./.github/actions/kind-cluster
        with:
          config: ./ci/config.yaml

      - name: Load images
        run: |
          podman load -i /tmp/operator-oci.tar
          kind load image-archive /tmp/operator-oci.tar

      - name: Add service hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 fulcio-server.local tuf.local rekor-server.local rekor-search-ui.local cli-server.local" | sudo tee -a /etc/hosts

      - name: Replace images
        run: make dev-images generate && cat config/default/images.env

      - name: Run tests
        env:
          TEST_MANAGER_IMAGE: ${{ env.IMG }}
          OPENSHIFT: false
        run: make install && go test ./test/e2e/... -tags=custom_install -p 1 -timeout 20m

      - name: Archive test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-custom-install
          path: test/**/k8s-dump-*.tar.gz
          if-no-files-found: ignore

  test-e2e:
    name: Execute securesign/sigstore-e2e
    runs-on: ubuntu-24.04
    needs:
      - build-operator
    env:
      TEST_NAMESPACE: test
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Checkout test source repository
        uses: actions/checkout@v4
        with:
          repository: "securesign/sigstore-e2e"
          path: e2e

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Log in to registry.redhat.io
        uses: redhat-actions/podman-login@9184318aae1ee5034fbfbacc0388acf12669171f # v1
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: registry.redhat.io
          auth_file_path: /tmp/config.json

      - name: Image prune
        run: podman image prune -af

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: "*-image"
          merge-multiple: true
          path: /tmp

      - name: Install Cluster
        id: kind
        uses: ./.github/actions/kind-cluster
        with:
          config: ./ci/config.yaml
          keycloak: 'true'
          olm: 'true'
          prometheus: 'true'

      - name: Load images
        run: |
          podman load -i /tmp/operator-oci.tar
          kind load image-archive /tmp/operator-oci.tar

      - name: Add service hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 fulcio-server.local tuf.local rekor-server.local rekor-search-ui.local tsa-server.local cli-server.local ${{ steps.kind.outputs.oidc_host }}" | sudo tee -a /etc/hosts

      - name: Replace images
        run: make dev-images generate && cat config/default/images.env

      - name: Deploy operator container
        env:
          OPENSHIFT: false
        run: make deploy

      - name: Wait for operator to be ready
        run: |
          kubectl wait --for=condition=available deployment/rhtas-operator-controller-manager --timeout=120s -n openshift-rhtas-operator

      - name: Install securesign
        run: |
          sed -i 's#https://your-oidc-issuer-url#http://${{ steps.kind.outputs.oidc_host }}/auth/realms/trusted-artifact-signer#' config/samples/rhtas_v1alpha1_securesign.yaml
          sed -i 's#rhtas.redhat.com/metrics: "true"#rhtas.redhat.com/metrics: "false"#' config/samples/rhtas_v1alpha1_securesign.yaml
          kubectl create ns ${{ env.TEST_NAMESPACE }}
          kubectl create -f config/samples/rhtas_v1alpha1_securesign.yaml -n ${{ env.TEST_NAMESPACE }}
          sleep 1
          kubectl wait --for=condition=Ready securesign/securesign-sample --timeout=5m -n ${{ env.TEST_NAMESPACE }}

      - name: Run tests
        run: |
          export OIDC_ISSUER_URL="http://${{ steps.kind.outputs.oidc_host }}/auth/realms/trusted-artifact-signer"
          export FULCIO_URL=$(kubectl get fulcio -o jsonpath='{.items[0].status.url}' -n ${{ env.TEST_NAMESPACE }})
          export REKOR_URL=$(kubectl get rekor -o jsonpath='{.items[0].status.url}' -n ${{ env.TEST_NAMESPACE }})
          export REKOR_UI_URL=$(kubectl  get rekor -o jsonpath='{.items[0].status.rekorSearchUIUrl}' -n ${{ env.TEST_NAMESPACE }})
          export TUF_URL=$(kubectl get tuf -o jsonpath='{.items[0].status.url}' -n ${{ env.TEST_NAMESPACE }})
          export TSA_URL=$(kubectl get timestampauthorities -o jsonpath='{.items[0].status.url}' -n ${{ env.TEST_NAMESPACE }})/api/v1/timestamp
          
          export  CLI_STRATEGY=cli_server
          export CLI_SERVER_URL="http://cli-server.local"
          
          cd e2e
          source ./tas-env-variables.sh
          # exclude UI tests
          go test -v $(go list ./test/... | grep -v rekorsearchui)

      - name: dump the logs of the operator
        run: |
          kubectl logs -n openshift-rhtas-operator deployment/rhtas-operator-controller-manager
        if: failure()
